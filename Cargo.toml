[workspace]
members = ["cookbook_macros"]

[workspace.package]
version = "0.0.1"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["Stephen Walker-Weinshenker"]
description = "Recipe database and browser"
keywords = ["Cookbook", "Recipe", "Ingredient", "Cook", "Database"]
categories = ["Command line utilites", ]
repository = "https://github.com/sww1235/CookBookRS"


[package]
name = "cookbook-rs"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
description.workspace = true
keywords.workspace = true
categories.workspace = true
repository.workspace = true
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = { version = "~4", features = ["derive", "unicode", "wrap_help"] }
crossterm = "0.27.0"
dimensioned = "~0"
log = "~0"
ratatui = {version = "~0.26", features = ["unstable-widget-ref"] }
serde = { version = "~1", features = ["derive"] }
toml = "~0"
simple_logger = "~5"
strum = {version = "~0.26", features = ["derive"] }
cookbook_macros = {path="cookbook_macros"}
num-derive = "~0.4"
num-traits = "~0.2"

[lib]
name = "cookbook_core"
path = "src/lib.rs"

[workspace.lints.rust]
missing_docs = "warn"
unsafe_code = "forbid"
[workspace.lints.clippy]
multiple_crate_versions = "warn"
correctness = "warn"
suspicious = "warn"
perf = "warn"
cargo = "warn"
pedantic = {level = "warn", priority = -1}
style = "warn"
# restriction/nursery lints
arithmetic_side_effects = "warn"
as_underscore = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
char_lit_as_u8 = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
default_numeric_fallback = "warn"
deref_by_slicing = "warn"
else_if_without_else = "warn"
empty_drop = "warn"
empty_line_after_doc_comments = "warn"
empty_structs_with_brackets = "warn"
equatable_if_let = "warn"
exhaustive_enums = "warn"
expect_used = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast = "warn"
fn_to_numeric_cast_any = "warn"
fn_to_numeric_cast_with_truncation = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
large_include_file = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "warn"
#TODO: evaluate this lint more
#missing_const_for_fn = "warn"
missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
multiple_inherent_impl = "warn"
needless_raw_strings = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
print_stderr = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
shadow_unrelated = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
todo = "warn"
try_err = "warn"
unimplemented = "warn"
unnecessary_cast = "warn"
unnecessary_self_imports = "warn"
unseparated_literal_suffix = "warn"
unwrap_in_result = "warn"
unwrap_used = "warn"
use_self = "warn"
verbose_file_reads = "warn"
